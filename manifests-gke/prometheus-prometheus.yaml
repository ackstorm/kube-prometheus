apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: prometheus-peer
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 2.41.0
  name: prometheus-peer
  namespace: observability-peer
spec:
  additionalAlertRelabelConfigs:
    key: additional-relabel-configs.yaml
    name: additional-relabel-configs
  additionalScrapeConfigs:
    key: additional-scrape-configs.yaml
    name: additional-scrape-configs
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: prometheus
              app.kubernetes.io/instance: prometheus-peer
              app.kubernetes.io/name: prometheus
              app.kubernetes.io/part-of: kube-prometheus
          namespaces:
          - observability-peer
          topologyKey: kubernetes.io/hostname
        weight: 100
  containers:
  - name: prometheus
    startupProbe:
      failureThreshold: 120
  enableAdminAPI: false
  enableFeatures:
  - memory-snapshot-on-shutdown
  - remote-write-receiver
  - exemplar-storage
  externalLabels:
    cluster: ${ENVIRONMENT}-${CLUSTER}
    env: ${ENVIRONMENT}
  image: quay.io/prometheus/prometheus:v2.41.0
  nodeSelector:
    kubernetes.io/os: linux
  podMetadata:
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: prometheus-peer
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 2.41.0
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  probeNamespaceSelector: {}
  probeSelector: {}
  remoteWrite:
  - headers:
      X-Scope-OrgID: ${ENVIRONMENT}-${CLUSTER}
    queueConfig:
      maxSamplesPerSend: 10000
    sendExemplars: true
    url: ${OBSERVER_URL}/api/v1/push
    writeRelabelConfigs:
    - regex: (.*)
      sourceLabels:
      - __name__
      targetLabel: __name__
  replicas: 2
  resources:
    requests:
      memory: 100Mi
  retention: 4d
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      role: peer
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus-prometheus-peer
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  storage:
    volumeClaimTemplate:
      apiVersion: v1
      kind: PersistentVolumeClaim
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: ${VOLUME_SIZE}Gi
  tsdb:
    outOfOrderTimeWindow: 5m
  version: 2.41.0
